// problem https://leetcode.com/problems/intersection-of-two-arrays/submissions/

import java.util.Arrays;
import java.util.*;
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> a = new HashSet<Integer>();
        for(int i:nums1)a.add(i);
        Set<Integer> b = new HashSet<Integer>();
       for(int i:nums2)b.add(i);
        
        Set<Integer> ans = new HashSet<Integer>(a);
        ans.retainAll(b);
        
        int[] myArray = new int[ans.size()];
        int j=0;
        for(int i:ans){
            myArray[j]=i;
            j++;
        }
        
        return myArray;
        
    }
} // run time 3ms

// without collection;
import java.util.Arrays;
import java.util.*;
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        int min;
        if(nums1.length<nums2.length){
            min=nums1.length;
        }else{
            min=nums2.length;
        }
        int[] temp=new int[min];
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int i=0,j=0,count=0;
        while(i<nums1.length && j<nums2.length){
            while(i+1<nums1.length && nums1[i]==nums1[i+1]){
                i++;
            }
             while(j+1<nums2.length && nums2[j]==nums2[j+1]){
                j++;
            }
            if(nums1[i]==nums2[j]){
                temp[count]=nums1[i];
                i++;
                j++;
                count++;
            }else if(nums1[i]<nums2[j]){
                i++;
            }else{
                j++;
            }
        }
        int[] ans = new int[count];
        for(int k=0;k<count;k++){
            ans[k]=temp[k];
        }
        return ans;
    }
} // run 2 ms
