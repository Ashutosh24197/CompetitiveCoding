// problem https://leetcode.com/problems/next-permutation

import java.util.*;
class Solution {
    public void nextPermutation(int[] nums) {
        
        for(int i=nums.length-1;i>=0;i--){
            if(i==0){
                Arrays.sort(nums);
                break;
            }
            if(nums[i-1]<nums[i]){
                Arrays.sort(nums,i,nums.length);
                for(int j = i;j<nums.length;j++){
                    if(nums[j]>nums[i-1]){
                        int temp = nums[j];
                        nums[j]  = nums[i-1];
                        nums[i-1] = temp;
                        break;
                    }
                }
                break;
            }
        }
   
    }
}

// another solution
public void nextPermutation(int[] nums) {
	int l = nums.length, i = l - 2;
	while(i >= 0 && nums[i] >= nums[i + 1]){
		i--;
	}
	for(int j = i + 1, k = l - 1; j < k; j++,k--){
		swap(nums, j, k);
	}
	if(i < 0) return;
	int j = i + 1;
	while(j < l && nums[j] <= nums[i]){
		j++;
	}
	swap(nums, i, j);
}

private void swap(int[] nums, int i, int j){
	int t = nums[i];
	nums[i] = nums[j];
	nums[j] = t;
}
