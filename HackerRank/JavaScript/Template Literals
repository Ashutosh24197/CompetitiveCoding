/* Problem  https://www.hackerrank.com/challenges/js10-template-literals/problem  */

/*Solution */

'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.trim().split('\n').map(string => {
        return string.trim();
    });
    
    main();    
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Determine the original side lengths and return an array:
 * - The first element is the length of the shorter side
 * - The second element is the length of the longer side
 * 
 * Parameter(s):
 * literals: The tagged template literal's array of strings.
 * expressions: The tagged template literal's array of expression values (i.e., [area, perimeter]).
 */
function sides(literals, ...expressions) {
    let a=expressions[0];
    let p=expressions[1];
  
    
    let temp=p*p - 16*a;
    temp= Math.sqrt(temp);

     
    let s1=(p+temp)/4;
    let s2=(p-temp)/4;
    var sides= new Array();
    if(s1<s2){
        sides.push(s1);
        sides.push(s2);
    }else{
        sides.push(s2);
        sides.push(s1);
    }

    return sides;
}

