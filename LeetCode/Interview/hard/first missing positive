// problem  https://leetcode.com/problems/first-missing-positive/


import java.lang.*;
class Solution {
    public int firstMissingPositive(int[] nums) {
        
        // First pass to seprate positive and negative number
        // lift side positive numbers
        int n = nums.length;
        int px = 0;
        
        for(int i=0;i<n;i++){
            if(nums[i]>0){
                
                int temp = nums[i];
                nums[i] = nums[px];
                nums[px] = temp;
                px++;   
            }
        }
        // Second pass to convert no to negative at index(whiche no are present in array)
        for(int i=0;i<px;i++){
            int temp = Math.abs(nums[i])-1;
            
            if(temp<n)
                nums[temp]=-Math.abs(nums[temp]);
        }
        // finding the missing value
        // it will be the no at which index the number is positive because we have 
        // convert the number into negative which no are present in array
        for(int i=0;i<px;i++){
            if(nums[i]>0){
                return i+1;
            }
        }
        
        return px+1;
    }
}
