# Problem  https://leetcode.com/explore/challenge/card/july-leetcoding-challenge/545/week-2-july-8th-july-14th/3386/

# Solution 

"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Node'):
        if head==None:
            return head
        s=[]
        cur=head
        nex=head.next
        
        while cur!=None:
            if cur.child!=None:
                if nex!=None:
                    s.append(nex)
                nex=cur.child
                cur.child=None
                cur.next=nex
                nex.prev=cur
                cur=nex
                nex=nex.next
            else:    
                
                if nex==None:
                    if len(s)>0:
                        nex=s.pop()
                        cur.next=nex
                        nex.prev=cur
                        cur=nex
                        nex=nex.next
                    else:
                        break
                else:
                    cur=nex
                    nex=nex.next
                
        return head
            
        
