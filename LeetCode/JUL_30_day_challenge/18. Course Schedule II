# Problem  https://leetcode.com/explore/challenge/card/july-leetcoding-challenge/546/week-3-july-15th-july-21st/3394/

# Solution

class Solution
{
public:
    vector<int> findOrder(int n, vector<vector<int>>& prerequisites)
    {
        vector<vector<int>> G(n);
        vector<int> degree(n, 0), bfs;

        for (auto& e : prerequisites)
            G[e[1]].push_back(e[0]), degree[e[0]]++;

        for (int i = 0; i < n; ++i)
        {
            if (!degree[i])
                bfs.push_back(i);
        }

        for (int i = 0; i < bfs.size(); ++i)
        {
            for (int j: G[bfs[i]])
            {
                if (--degree[j] == 0)
                    bfs.push_back(j);
            }
        }

        if(bfs.size() != n)
            return {};
        else
            return bfs;
    }
};
